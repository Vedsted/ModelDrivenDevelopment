//grammar org.xtext.jvs.Asso with org.eclipse.xtext.common.Terminals // Commented out to have own Terminals 
grammar org.xtext.jvs.Asso hidden(WS, ML_COMMENT, SL_COMMENT) // Custom Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate asso "http://www.xtext.org/jvs/Asso"


Model:
	variables += Variable*
	evaluations += EvalExpression*
;

/*******************************************
 * Custom Terminals.
 * Hidden terminals are ignored in the dsl
 */
terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

terminal FLOAT returns ecore::EFloat: ('0'..'9')+'.'('0'..'9')+ | ('0'..'9')+;

terminal ML_COMMENT : '/*' -> '*/';	
terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;

terminal WS         : (' '|'\t'|'\r'|'\n')+;
/********************************************/

Expression:
	PlusOrMinus
;

Atomic returns Expression:
	'(' Expression ')' |
	{FloatConstant} value=FLOAT |
	{NegFloatConstant} '-' value=FLOAT |
	{VariableRef} value=[Variable]|
	{InlineVariable} '(' value=Variable ')'
;

PlusOrMinus returns Expression:
	MultOrDiv (({Plus.left=current} '+' | {Minus.left=current} '-' ) right=MultOrDiv)*
;

MultOrDiv returns Expression:
	Atomic (({Mult.left=current} '*' | {Div.left=current} '/' ) right=Atomic)*
;

Variable:
	'let' name=ID '=' (subVar+=Variable 'in')* expression=Expression (';')?
;

EvalExpression:
	'eval' expression=Expression (';')?// Id added to display hovering
;
